// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
	Mux(a=a[0],b=e[0],sel=sel[2],out=aORe0); 
	Mux(a=c[0],b=g[0],sel=sel[2],out=cORg0); 
	Mux(a=b[0],b=f[0],sel=sel[2],out=bORf0); 
	Mux(a=d[0],b=h[0],sel=sel[2],out=dORh0); 
	Mux(a=aORe0,b=cORg0,sel=sel[1],out=w10); 
	Mux(a=bORf0,b=dORh0,sel=sel[1],out=w20); 
	Mux(a=w10,b=w20,sel=sel[0],out=out[0]);
	Mux(a=a[1],b=e[1],sel=sel[2],out=aORe1); 
	Mux(a=c[1],b=g[1],sel=sel[2],out=cORg1); 
	Mux(a=b[1],b=f[1],sel=sel[2],out=bORf1); 
	Mux(a=d[1],b=h[1],sel=sel[2],out=dORh1); 
	Mux(a=aORe1,b=cORg1,sel=sel[1],out=w11); 
	Mux(a=bORf1,b=dORh1,sel=sel[1],out=w21); 
	Mux(a=w11,b=w21,sel=sel[0],out=out[1]);
	Mux(a=a[2],b=e[2],sel=sel[2],out=aORe2); 
	Mux(a=c[2],b=g[2],sel=sel[2],out=cORg2); 
	Mux(a=b[2],b=f[2],sel=sel[2],out=bORf2); 
	Mux(a=d[2],b=h[2],sel=sel[2],out=dORh2); 
	Mux(a=aORe2,b=cORg2,sel=sel[1],out=w12); 
	Mux(a=bORf2,b=dORh2,sel=sel[1],out=w22); 
	Mux(a=w12,b=w22,sel=sel[0],out=out[2]);
	Mux(a=a[3],b=e[3],sel=sel[2],out=aORe3); 
	Mux(a=c[3],b=g[3],sel=sel[2],out=cORg3); 
	Mux(a=b[3],b=f[3],sel=sel[2],out=bORf3); 
	Mux(a=d[3],b=h[3],sel=sel[2],out=dORh3); 
	Mux(a=aORe3,b=cORg3,sel=sel[1],out=w13); 
	Mux(a=bORf3,b=dORh3,sel=sel[1],out=w23); 
	Mux(a=w13,b=w23,sel=sel[0],out=out[3]);
	Mux(a=a[4],b=e[4],sel=sel[2],out=aORe4); 
	Mux(a=c[4],b=g[4],sel=sel[2],out=cORg4); 
	Mux(a=b[4],b=f[4],sel=sel[2],out=bORf4); 
	Mux(a=d[4],b=h[4],sel=sel[2],out=dORh4); 
	Mux(a=aORe4,b=cORg4,sel=sel[1],out=w14); 
	Mux(a=bORf4,b=dORh4,sel=sel[1],out=w24); 
	Mux(a=w14,b=w24,sel=sel[0],out=out[4]);
	Mux(a=a[5],b=e[5],sel=sel[2],out=aORe5); 
	Mux(a=c[5],b=g[5],sel=sel[2],out=cORg5); 
	Mux(a=b[5],b=f[5],sel=sel[2],out=bORf5); 
	Mux(a=d[5],b=h[5],sel=sel[2],out=dORh5); 
	Mux(a=aORe5,b=cORg5,sel=sel[1],out=w15); 
	Mux(a=bORf5,b=dORh5,sel=sel[1],out=w25); 
	Mux(a=w15,b=w25,sel=sel[0],out=out[5]);
	Mux(a=a[6],b=e[6],sel=sel[2],out=aORe6); 
	Mux(a=c[6],b=g[6],sel=sel[2],out=cORg6); 
	Mux(a=b[6],b=f[6],sel=sel[2],out=bORf6); 
	Mux(a=d[6],b=h[6],sel=sel[2],out=dORh6); 
	Mux(a=aORe6,b=cORg6,sel=sel[1],out=w16); 
	Mux(a=bORf6,b=dORh6,sel=sel[1],out=w26); 
	Mux(a=w16,b=w26,sel=sel[0],out=out[6]);
	Mux(a=a[7],b=e[7],sel=sel[2],out=aORe7); 
	Mux(a=c[7],b=g[7],sel=sel[2],out=cORg7); 
	Mux(a=b[7],b=f[7],sel=sel[2],out=bORf7); 
	Mux(a=d[7],b=h[7],sel=sel[2],out=dORh7); 
	Mux(a=aORe7,b=cORg7,sel=sel[1],out=w17); 
	Mux(a=bORf7,b=dORh7,sel=sel[1],out=w27); 
	Mux(a=w17,b=w27,sel=sel[0],out=out[7]);
	Mux(a=a[8],b=e[8],sel=sel[2],out=aORe8); 
	Mux(a=c[8],b=g[8],sel=sel[2],out=cORg8); 
	Mux(a=b[8],b=f[8],sel=sel[2],out=bORf8); 
	Mux(a=d[8],b=h[8],sel=sel[2],out=dORh8); 
	Mux(a=aORe8,b=cORg8,sel=sel[1],out=w18); 
	Mux(a=bORf8,b=dORh8,sel=sel[1],out=w28); 
	Mux(a=w18,b=w28,sel=sel[0],out=out[8]);
	Mux(a=a[9],b=e[9],sel=sel[2],out=aORe9); 
	Mux(a=c[9],b=g[9],sel=sel[2],out=cORg9); 
	Mux(a=b[9],b=f[9],sel=sel[2],out=bORf9); 
	Mux(a=d[9],b=h[9],sel=sel[2],out=dORh9); 
	Mux(a=aORe9,b=cORg9,sel=sel[1],out=w19); 
	Mux(a=bORf9,b=dORh9,sel=sel[1],out=w29); 
	Mux(a=w19,b=w29,sel=sel[0],out=out[9]);
	Mux(a=a[10],b=e[10],sel=sel[2],out=aORe10); 
	Mux(a=c[10],b=g[10],sel=sel[2],out=cORg10); 
	Mux(a=b[10],b=f[10],sel=sel[2],out=bORf10); 
	Mux(a=d[10],b=h[10],sel=sel[2],out=dORh10); 
	Mux(a=aORe10,b=cORg10,sel=sel[1],out=w110); 
	Mux(a=bORf10,b=dORh10,sel=sel[1],out=w210); 
	Mux(a=w110,b=w210,sel=sel[0],out=out[10]);
	Mux(a=a[11],b=e[11],sel=sel[2],out=aORe11); 
	Mux(a=c[11],b=g[11],sel=sel[2],out=cORg11); 
	Mux(a=b[11],b=f[11],sel=sel[2],out=bORf11); 
	Mux(a=d[11],b=h[11],sel=sel[2],out=dORh11); 
	Mux(a=aORe11,b=cORg11,sel=sel[1],out=w111); 
	Mux(a=bORf11,b=dORh11,sel=sel[1],out=w211); 
	Mux(a=w111,b=w211,sel=sel[0],out=out[11]);
	Mux(a=a[12],b=e[12],sel=sel[2],out=aORe12); 
	Mux(a=c[12],b=g[12],sel=sel[2],out=cORg12); 
	Mux(a=b[12],b=f[12],sel=sel[2],out=bORf12); 
	Mux(a=d[12],b=h[12],sel=sel[2],out=dORh12); 
	Mux(a=aORe12,b=cORg12,sel=sel[1],out=w112); 
	Mux(a=bORf12,b=dORh12,sel=sel[1],out=w212); 
	Mux(a=w112,b=w212,sel=sel[0],out=out[12]);
	Mux(a=a[13],b=e[13],sel=sel[2],out=aORe13); 
	Mux(a=c[13],b=g[13],sel=sel[2],out=cORg13); 
	Mux(a=b[13],b=f[13],sel=sel[2],out=bORf13); 
	Mux(a=d[13],b=h[13],sel=sel[2],out=dORh13); 
	Mux(a=aORe13,b=cORg13,sel=sel[1],out=w113); 
	Mux(a=bORf13,b=dORh13,sel=sel[1],out=w213); 
	Mux(a=w113,b=w213,sel=sel[0],out=out[13]);
	Mux(a=a[14],b=e[14],sel=sel[2],out=aORe14); 
	Mux(a=c[14],b=g[14],sel=sel[2],out=cORg14); 
	Mux(a=b[14],b=f[14],sel=sel[2],out=bORf14); 
	Mux(a=d[14],b=h[14],sel=sel[2],out=dORh14); 
	Mux(a=aORe14,b=cORg14,sel=sel[1],out=w114); 
	Mux(a=bORf14,b=dORh14,sel=sel[1],out=w214); 
	Mux(a=w114,b=w214,sel=sel[0],out=out[14]);
	Mux(a=a[15],b=e[15],sel=sel[2],out=aORe15); 
	Mux(a=c[15],b=g[15],sel=sel[2],out=cORg15); 
	Mux(a=b[15],b=f[15],sel=sel[2],out=bORf15); 
	Mux(a=d[15],b=h[15],sel=sel[2],out=dORh15); 
	Mux(a=aORe15,b=cORg15,sel=sel[1],out=w115); 
	Mux(a=bORf15,b=dORh15,sel=sel[1],out=w215); 
	Mux(a=w115,b=w215,sel=sel[0],out=out[15]); 

}
